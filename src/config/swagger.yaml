openapi: 3.0.0
info:
  title: SOKO
  description: SOKO-app-API
  version: 0.1.9

servers:
  - url: https://sokoapi-production.up.railway.app/api
    description: production server
  - url: http://localhost:3000/api
    description: local server
paths:
  /users:
    get:
      tags:
        - users
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /register:
    post:
      tags:
        - users
      requestBody:
        description: add new user
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                fullName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                allowRules:
                  type: boolean
                accessMail:
                  type: boolean
            example:
              fullName: AniA
              email: avazneli@gmail.com
              password: nikolozi
              phone: "#4257F5"
              allowRules: false
              accessMail: true
      responses:
        "201":
          description: user added
  /mobile/verify:
    post:
      tags:
        - users
      requestBody:
        description: send code
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                phone:
                  type: string
      responses:
        "200":
          description: code sent successfully
  /mobile/success:
    post:
      tags:
        - users
      requestBody:
        description: check code
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                code:
                  type: number
      responses:
        "200":
          description: code sent successfully
  /login:
    post:
      tags:
        - Auth
      requestBody:
        description: login
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: avazneli@gmail.com
              password: nikolozi
      responses:
        "200":
          description: user login successfully
  /password/send-link:
    post:
      tags:
        - Auth
      requestBody:
        description: password recovery request
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: string
                redirectLink:
                  type: string
            example:
              email: avazneli@gmail.com
              redirectLink: https://soko-frontend.vercel.app/recoverPassword
      responses:
        "200":
          description: sent recovery link successfully
  /password/reset:
    put:
      tags:
        - Auth
      requestBody:
        description: update password
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                password:
                  type: string
                hash:
                  type: string
      responses:
        "200":
          description: sent recovery link successfully
  /events:
    get:
      tags:
        - Event
      responses:
        "200":
          description: get all event
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - Event
      requestBody:
        description: add new event
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
      responses:
        "200":
          description: new event add successfully
  /events/{id}:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Event
      requestBody:
        description: add new event
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
      responses:
        "200":
          description: event updated successfully
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Event
      responses:
        "200":
          description: event removed successfully
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Event
      responses:
        "200":
          description: event fetch successfully
  /category:
    get:
      tags:
        - Category
      responses:
        "200":
          description: get all category
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - Category
      requestBody:
        description: add new category
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
      responses:
        "200":
          description: new category add successfully
  /category/{id}:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Category
      requestBody:
        description: add new category
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
      responses:
        "200":
          description: category updated successfully
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Category
      responses:
        "200":
          description: category removed successfully
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Category
      responses:
        "200":
          description: category fetch successfully
  /subCategory:
    get:
      tags:
        - subCategory
      responses:
        "200":
          description: get all subCategory
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - subCategory
      requestBody:
        description: add new subCategory
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
                eventId:
                  type: string
      responses:
        "200":
          description: new subCategory add successfully
  /subCategory/{id}:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - subCategory
      requestBody:
        description: add new subCategory
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
                eventId:
                  type: string
      responses:
        "200":
          description: subCategory updated successfully
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - subCategory
      responses:
        "200":
          description: subCategory removed successfully
  /services:
    get:
      tags:
        - Services
      responses:
        "200":
          description: get all service
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - Services
      requestBody:
        description: add new service
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                name:
                  type: string
                  example: ქორწილის გადაღება
                useId:
                  type: string
                  example: 121212
                eventType:
                  type: array
                  items:
                    type: string
                    example: ვიდეოგრაფია
                city:
                  type: string
                  example: გორი
                address:
                  type: string
                  example: მშვიდობის 17
                flexLocation:
                  type: boolean
                  example: false
                price:
                  type: number
                  example: 2500
                currency:
                  type: string
                  example: "₾"
                unit:
                  type: string
                  example: "per hour"
                flexPrice:
                  type: boolean
                  example: false
                description:
                  type: string
                  example: გადავიღებ ქორწილის ვიდეოს
                # questions:
                #   type: array
                #   items:
                #     type: object
                #     properties: 
                #       question:
                #         type: string
                #       answers: 
                #         type: array
                #         items: 
                #           type: string
                gallery:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: new service add successfully
  /services/{id}:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Services
      requestBody:
        description: add new service
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                name:
                  type: string
                  example: დაბადების დღის გადაღება
                useId:
                  type: string
                  example: 121212
                eventType:
                  type: array
                  items:
                    type: string
                    example: ფოტოგრაფია
                city:
                  type: string
                  example: თბილისი
                address:
                  type: string
                  example: ბაკურიანის 17
                flexLocation:
                  type: boolean
                  example: false
                price:
                  type: number
                  example: 5151
                currency:
                  type: string
                  example: "₾"
                unit:
                  type: string
                  example: "per hour"
                flexPrice:
                  type: boolean
                  example: false
                description:
                  type: string
                  example: ფოტოგრაფის მომსახურება
                # questions:
                #   type: array
                #   items:
                #     type: object
                #     properties: 
                #       question:
                #         type: string
                #       answers: 
                #         type: array
                #         items: 
                #           type: string
                gallery:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        "200":
          description: service updated successfully
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Services
      responses:
        "200":
          description: service removed successfully
  /businessProfiles:
    get:
      tags:
        - BusinessProfile
      responses:
        "200":
          description: get all businessProfile
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - BusinessProfile
      requestBody:
        description: add new businessProfile
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                avatar:
                  type: string
                  format: binary
                userID:
                  type: string
                  example: შოკოტელა - ხელნაკეთი შოკოლადები
                businessName:
                  type: string
                  example: შოკოტელა - ხელნაკეთი შოკოლადები
                memberSince:
                  type: string
                  example: 01-04-2023
                experience:
                  type: string
                  example: ტკბილეულის დამზადების 5 წლიანი გამოცდილება
                rate:
                  type: number
                  example: 5
                viewedNumber:
                  type: number
                  example: 857
                likes:
                  type: number
                  example: 54
                littleDescription:
                  type: string
                  example: ბელგიური, უმაღლესი ხარისხის შოკოლადის დამზადება
                socials:
                  type: array
                  items:
                    type: string
                    example: facebook.com/shokotela
                tags:
                  type: array
                  items:
                    type: string
                    example: შოკოლადი
      responses:
        "200":
          description: new businessProfile add successfully
  /businessProfiles/{id}:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - BusinessProfile
      requestBody:
        description: add new BusinessProfile
        required: true
        content:
          multipart/form-data:
            schema:
              type: "object"
              properties:
                avatar:
                  type: string
                  format: binary
                userID:
                  type: string
                  example: შოკოტელა - ხელნაკეთი შოკოლადები
                businessName:
                  type: string
                  example: შოკოტელა - ხელნაკეთი შოკოლადები
                memberSince:
                  type: string
                  example: 01-04-2023
                experience:
                  type: string
                  example: ტკბილეულის დამზადების 5 წლიანი გამოცდილება
                rate:
                  type: number
                  example: 5
                viewedNumber:
                  type: number
                  example: 857
                likes:
                  type: number
                  example: 54
                littleDescription:
                  type: string
                  example: ბელგიური, უმაღლესი ხარისხის შოკოლადის დამზადება
                socials:
                  type: array
                  items:
                    type: string
                    example: facebook.com/shokotela
                tags:
                  type: array
                  items:
                    type: string
                    example: შოკოლადი
      responses:
        "200":
          description: BusinessProfile updated successfully
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - BusinessProfile
      responses:
        "200":
          description: BusinessProfile removed successfully