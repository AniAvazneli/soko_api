openapi: 3.0.0
info:
  title: SOKO
  description: SOKO-app-API
  version: 0.1.9

servers:
  - url: https://sokoapi-production.up.railway.app/api
    description: production server
  - url: http://localhost:3000/api
    description: local server
paths:
  /users:
    get:
      tags:
        - users
      responses:
        "200":
          description: Successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /register:
    post:
      tags:
        - users
      requestBody:
        description: add new user
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                fullName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                allowRules:
                  type: boolean
                accessMail:
                  type: boolean
            example:
              fullName: AniA
              email: avazneli@gmail.com
              password: nikolozi
              phone: "#4257F5"
              allowRules: false
              accessMail: true
      responses:
        "201":
          description: user added
  /mobile/verify:
    post:
      tags:
        - users
      requestBody:
        description: send code
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                phone:
                  type: string
      responses:
        "200":
          description: code sent successfully
  /mobile/success:
    post:
      tags:
        - users
      requestBody:
        description: check code
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                code:
                  type: number
      responses:
        "200":
          description: code sent successfully
  /login:
    post:
      tags:
        - Auth
      requestBody:
        description: login
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: string
                password:
                  type: string
            example:
              email: avazneli@gmail.com
              password: nikolozi
      responses:
        "200":
          description: user login successfully
  /password/send-link:
    post:
      tags:
        - Auth
      requestBody:
        description: password recovery request
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: string
                redirectLink:
                  type: string
            example:
              email: avazneli@gmail.com
              redirectLink: https://soko-frontend.vercel.app/recoverPassword
      responses:
        "200":
          description: sent recovery link successfully
  /password/reset:
    put:
      tags:
        - Auth
      requestBody:
        description: update password
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                password:
                  type: string
                hash:
                  type: string
      responses:
        "200":
          description: sent recovery link successfully
  /events:
    get:
      tags:
        - Event
      responses:
        "200":
          description: get all event
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - Event
      requestBody:
        description: add new event
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
                id:
                  type: string
      responses:
        "200":
          description: new event add successfully
  /event/{id}:
    put:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Event
      requestBody:
        description: add new event
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
                id:
                  type: string
      responses:
        "200":
          description: event updated successfully
    delete:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Event
      responses:
        "200":
          description: event removed successfully
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      tags:
        - Event
      responses:
        "200":
          description: event fetch successfully